name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:4.2
        ports:
          - 27017:27017
        options: >-
          --env MONGO_INITDB_ROOT_USERNAME=admin
          --env MONGO_INITDB_ROOT_PASSWORD=admin

      mongo-express:
        image: mongo-express:latest
        ports:
          - 8081:8081
        options: >-
          --env ME_CONFIG_MONGODB_ADMINUSERNAME=admin
          --env ME_CONFIG_MONGODB_ADMINPASSWORD=admin
          --env ME_CONFIG_MONGODB_SERVER=mongo
          --env ME_CONFIG_MONGODB_ENABLE_ADMIN=true

      nats:
        image: nats:latest
        ports:
          - 4222:4222
          - 6222:6222
          - 8222:8222

      eventstore:
        image: eventstore/eventstore:latest
        ports:
          - 2113:2113
          - 1113:1113
        options: >-
          --env EVENTSTORE_CLUSTER_SIZE=1
          --env EVENTSTORE_RUN_PROJECTIONS=All
          --env EVENTSTORE_START_STANDARD_PROJECTIONS=true
          --env EVENTSTORE_INT_TCP_PORT=1113
          --env EVENTSTORE_HTTP_PORT=2113
          --env EVENTSTORE_INSECURE=true
          --env EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
          --env EVENTSTORE_ALLOW_UNKNOWN_OPTIONS=true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        run: |
          docker-compose -f ./docker-compose.yml build
          docker-compose -f ./docker-compose.yml push

      - name: Stop and remove any existing containers
        run: |
          docker ps -q --filter "ancestor=mongo:4.2" | xargs -r docker stop | xargs -r docker rm
          docker ps -q --filter "ancestor=mongo-express:latest" | xargs -r docker stop | xargs -r docker rm
          docker ps -q --filter "ancestor=nats:latest" | xargs -r docker stop | xargs -r docker rm
          docker ps -q --filter "ancestor=eventstore/eventstore:latest" | xargs -r docker stop | xargs -r docker rm
          docker ps -q --filter "ancestor=inncursio197/evento-service:latest" | xargs -r docker stop | xargs -r docker rm
          docker ps -q --filter "ancestor=inncursio197/foroblog-app:latest" | xargs -r docker stop | xargs -r docker rm
          docker ps -q --filter "ancestor=inncursio197/foroblog-frontend:latest" | xargs -r docker stop | xargs -r docker rm

      - name: Clean up networks and volumes
        run: |
          docker network prune -f
          docker volume prune -f

      - name: Deploy services
        run: |
          docker-compose -f ./docker-compose.yml up -d
          docker-compose -f ./docker-compose.yml run foroblog-app npm test
